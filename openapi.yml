openapi: 3.1.0
info:
  title: API de Gestión de Tareas - NUEVO SPA
  description: API RESTful con autenticación JWT y documentación Swagger
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
security:
  - bearer-key: []
tags:
  - name: Usuarios
    description: Operaciones CRUD sobre usuarios
  - name: Health
    description: Validar el estado de la aplicacion
  - name: Tareas
    description: Operaciones CRUD sobre tareas
paths:
  /api/users/{id}:
    get:
      tags:
        - Usuarios
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - Usuarios
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - Usuarios
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/tasks/{id}:
    get:
      tags:
        - Tareas
      operationId: getTaskById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
    put:
      tags:
        - Tareas
      operationId: updateTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
    delete:
      tags:
        - Tareas
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/users:
    get:
      tags:
        - Usuarios
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Usuarios
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/tasks:
    get:
      tags:
        - Tareas
      operationId: getAllTasks
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskResponse'
    post:
      tags:
        - Tareas
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TaskResponse'
  /api/auth/login:
    post:
      tags:
        - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/health:
    get:
      tags:
        - Health
      operationId: healthCheck
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    put:
      tags:
        - Health
      operationId: healthCheck_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    post:
      tags:
        - Health
      operationId: healthCheck_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - Health
      operationId: healthCheck_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    options:
      tags:
        - Health
      operationId: healthCheck_6
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    head:
      tags:
        - Health
      operationId: healthCheck_5
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
    patch:
      tags:
        - Health
      operationId: healthCheck_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        role:
          type: string
    TaskRequest:
      type: object
      properties:
        title:
          type: string
          maxLength: 2147483647
          minLength: 2
        description:
          type: string
          maxLength: 2147483647
          minLength: 2
        statusId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
      required:
        - statusId
        - userId
    TaskResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        status:
          type: string
        userId:
          type: integer
          format: int64
        username:
          type: string
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
    AuthRequest:
      type: object
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
  securitySchemes:
    bearer-key:
      type: http
      name: Authorization
      in: header
      scheme: bearer
      bearerFormat: JWT
